@using Microsoft.AspNetCore.Components
@using Microsoft.AspNetCore.Components.Web
@using PokerOddsPro.Shared.Services;
@using PokerOddsPro.Shared.Dto.PokerDto.General;
@using PokerOddsPro.Shared.Dto;
@using PokerOddsPro.Shared.ViewModels;
@using PokerOddsPro.Shared.Helpers;

<div class="card-board-container">
    <div class="card-board">
        @for (int i = 0; i < Cards.Count; i++)
        {
            <CardDisplay card="@Cards[i]" CustomWrapperCss="@GetCssForCard(i)" DisplayMode="@DisplayModeEnum.LightMode" CardDisplayType="@cardDisplayType" />
        }
    </div>
</div>

<style>

    .card-board-container {
        height: auto;
        width: auto;
        display: flex;
        align-items: center;
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .card-board {
        margin: 5px;
        background-color: green;
        padding: 10px 60px 10px 60px;
        border-radius: 100px;
        border: 4px solid rgba(255, 255, 255, 0.8);
        max-width: 600px;
        flex: 1;
        min-height: 100px;
        box-shadow: @GlobalStyles.ShadowCss;
    }

    @@media only screen and (max-width: 500px) {
        .card-board {
            margin: 0px;
            padding: 10px 20px 10px 20px;
            border-radius: 0px;
        }
    }
</style>

@code {

    [Parameter]
    public BrowserWindowSizeContainer browserSize { get; set; }

    [Parameter]
    public BaseBoardDetails BoardDetails { get; set; }

    [Parameter]
    public List<CardSlot> Cards { get; set; }

    [Parameter]
    public EventCallback<CardSlot> UpdateSelectedCard { get; set; }

    public double majorMarginRight = 0.05;
    public double minorMarginRight = 0.025;
    public double computedWidthPercentage => ((1 - (majorMarginRight * 2 + minorMarginRight * 2)) / 5);

    //todo FIX PROPORTION ISSUES
    private CardDisplayTypeEnum cardDisplayType => (!browserSize.IsMobileProportion) ? CardDisplayTypeEnum.Classic : CardDisplayTypeEnum.Modern;

    public double GetMarginByCardIndex(int index)
    {
        if (BoardDetails.IsLastCardInAnyStreet(index + 1))
        {
            if (BoardDetails.NumberOfBoardCards == index + 1)
            {
                return 0;
            }
            else
            {
                return majorMarginRight;
            }
        }

        return minorMarginRight;
    }

    public string GetCssForCard(int index)
    {
        return $"margin-right:{GetMarginByCardIndex(index).ToString("P").Replace(" ", "")}; width:{computedWidthPercentage.ToString("P").Replace(" ", "")}; float:left;";
    }
}
